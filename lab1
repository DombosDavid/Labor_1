package com.company;

import java.util.Arrays;

public class Main
{

    public static void main(String[] args)
    {
        //Aufgabe_1
        int[] noten = {49, 31, 88, 91, 77, 43, 89, 3};
        int[] n_aus = Aufgabe_1.nicht_ausr(noten);
        Aufgabe_1.print_list(n_aus);
        double[] notenn = {49, 31, 88, 91, 77, 43, 89, 3};
        System.out.println("Durchschnitt: "+Aufgabe_1.durchschnit(notenn));
        System.out.println("ABG: ");
        Aufgabe_1.print_list(Aufgabe_1.rundete_noten(noten));
        System.out.println("max_abg_note: "+Aufgabe_1.max_abgerundete_note(noten));
        System.out.println("_____________Aufgabe_2___________");

        //Aufgabe_2
        int[] zahlen = {4, 8, 3, 10, 17};
        int max_Zahl = Augabe_2.maximale_Zahl(zahlen);
        System.out.println("Die maximale Zahl ist: "+max_Zahl);
        int min_Zahl = Augabe_2.minimale_Zahl(zahlen);
        System.out.println("Die minimale Zahl ist: "+min_Zahl);
        int max_sum = Augabe_2.max_Summe(zahlen);
        System.out.println("Die maximale Summe von n- 1 Zahlen: "+max_sum);
        int min_sum = Augabe_2.min_Summe(zahlen);
        System.out.println("Die minimale Summe von n- 1 Zahlen: "+min_sum);

        //Aufgabe_3
        System.out.println("_____________Aufgabe_3___________");
        int[] Zahl_1 = {7, 1, 3, 2, 1, 0, 1, 7};
        int[] Zahl_2 = {4, 5, 6, 6, 3, 2, 5, 7};
        int Zahl_3 = 4;
        int[] sum = Aufgabe_3.summe(Zahl_1, Zahl_2);
        System.out.print("Summe: "); Aufgabe_3.print_list3(sum);
        int[] dif = Aufgabe_3.diff(Zahl_1, Zahl_2);
        System.out.print("Diff: "); Aufgabe_3.print_list3(dif);
        int[] mult = Aufgabe_3.multi(Zahl_1,Zahl_3);
        System.out.print("Mult: "); Aufgabe_3.print_list3(mult);
        int[] div = Aufgabe_3.div(Zahl_1, Zahl_3);
        System.out.print("div:"); Aufgabe_3.print_list3(div);

        //Aufgabe_4
        System.out.println("_____________Aufgabe_4___________");
        int[] Preis_Tastatur = {10, 35, 900, 540, 9, 400};
        int[] Preis_USB = {20, 15, 40, 1500,30};
        int budget=30;
        System.out.println("Billigste Tastatur kostet: " + Aufgabe_4.billigste_tast(Preis_Tastatur));
        System.out.println("teurste Gestand kostet: "+Aufgabe_4.teuerste_Gegenstand(Preis_USB,Preis_Tastatur));
        System.out.println("Markus kann sich ein USB mit: "+Aufgabe_4.teuerste_USB(Preis_USB,budget)+" Euro kaufen");
        System.out.println("Der maximale Geldbetrag ist: "+Aufgabe_4.max_Geldbetrag(Preis_Tastatur,Preis_USB,budget));

    }
}

class Aufgabe_1
{
    static int[] nicht_ausr(int[] list)
    {
        int len=0;
        for(int i=0;i<list.length;i++)
            if(list[i]<40)
                len++;

        int[] aux = new int[len];
        int k=0;
        for(int i=0;i<list.length;i++)
        {
            if(list[i]<40)
            {
                aux[k]=list[i];
                k++;
            }
        }
        return aux;
    }
    static double durchschnit(double[] list)
    {
        double avg=0;
        double sum=0;
        for(int i=0;i<list.length;i++)
        {
            sum+=list[i];
        }
        avg=sum/list.length;
        return avg;
    }


    public static int runden(int x)
    {
        if ((5 - x % 5) < 3 && x > 38)
            return x + (5 - x % 5);
        return x;
    }

    public static int[] rundete_noten(int[] list)
    {
        int[] list1 = new int[list.length];
        for (int i = 0; i < list.length; i++)
        {
            list1[i] = runden(list[i]);
        }
        return list1;
    }

    public static int max_abgerundete_note(int[] noten)
    {
        int max = 0;
        for (int i : rundete_noten(noten))
            if (i > max)
                max = i;
        return max;
    }
    public static void print_list(int[] list)
    {
        System.out.println(Arrays.toString(list));
    }
}

class Augabe_2
{
    static int maximale_Zahl(int[] list)
    {
        int max = list[0];
        for (int i : list)
            if (i > max)
                max = i;
        return max;
    }

    static int minimale_Zahl(int[] list)
    {
        int min = list[0];
        for (int i : list)
            if (i < min)
                min = i;
        return min;
    }

    static int max_Summe(int[] list)
    {
        int sum = 0;
        for (int i : list)
            if (i != minimale_Zahl(list))
                sum += i;
        return sum;
    }

    static int min_Summe(int[] list)
    {
        int sum = 0;
        for (int i : list)
            if (i != maximale_Zahl(list))
                sum += i;
        return sum;
    }

}

class Aufgabe_3
{
    public static void print_list3(int[] list)
    {
        System.out.println(Arrays.toString(list));
    }

    static int[] summe(int[] list1, int[] list2)
    {
        int[] aux = new int[list1.length];
        if (list1.length == list2.length)
        {
            for (int i = list1.length - 1; i >= 0; i--)
            {
                //System.out.println(i+"::"+list1[i]+"-----"+list2[i]);
                if (list1[i] + list2[i] < 10)
                {
                    aux[i] += list1[i] + list2[i];
                } else
                {
                    if (i != 0 && list1[i] + list2[i] > 9)
                    {
                        aux[i] += (list1[i] + list2[i]) % 10;
                        aux[i - 1]++;
                    } else if (i == 0 && list1[i] + list2[i] >= 10)//resize
                    {
                        int size = list1.length + 1;
                        int[] aux1 = new int[size];
                        int k = 1;
                        aux1[0] = 1;
                        aux[0] += (list1[i] + list2[i]) % 10;
                        for (int j = 0; j < aux.length; j++)
                        {
                            aux1[k] = aux[j];
                            k++;
                        }
                        return aux1;
                    }
                }
            }
            return aux;
        } else
            return list1;
    }

    static int[] diff(int[] list1, int[] list2)
    {
        int dif = 0;
        int list_1_nr = 0;
        int list_2_nr = 0;
        int p = 1;
        if (list1.length == list2.length)
        {
            for (int i = list1.length - 1; i >= 0; i--)
            {
                list_1_nr += list1[i] * p;
                list_2_nr += list2[i] * p;
                p = p * 10;
            }
            dif = list_1_nr - list_2_nr;
            String diff = String.valueOf(dif);
            int len = diff.length();
            int[] aux = new int[len];
            for (int i = 0; i < diff.length(); i++)
                aux[i] = diff.charAt(i) - '0';
            return aux;
        } else
            return list1;
    }

    static int[] multi(int[] list1, int num)
    {
        int[] aux = new int[list1.length];
        for (int i = list1.length - 1; i >= 0; i--)
        {
                /*if(list1[i]*num<10)
                {
                    aux[i]=list1[i]*num;
                } else
                {
                    if(i!=0 && list1[i]*num>9)
                    {
                        aux
                    }
                }*/
            //System.out.println(i+"::"+list1[i]+"-----"+list2[i]);
            if (list1[i] * num < 10)
            {
                aux[i] += list1[i] * num;
            } else
            {
                if (i != 0 && list1[i] * num > 9)
                {
                    aux[i] += (list1[i] * num) % 10;
                    aux[i - 1] += (list1[i] * num) / 10;
                } else if (i == 0 && list1[i] * num >= 10)//resize
                {
                    int size = list1.length + 1;
                    int[] aux1 = new int[size];
                    int k = 1;
                    aux1[0] = (list1[i] * num) / 10;
                    aux[0] += (list1[i] * num) % 10;
                    for (int j = 0; j < aux.length; j++)
                    {
                        aux1[k] = aux[j];
                        k++;
                    }
                    return aux1;
                }
            }
        }

        return aux;
    }

    static int[] div(int[] list, int num)
    {
        int list_nr = 0;
        int p = 1;
        int rez = 0;
        for (int i = list.length - 1; i >= 0; i--)
        {
            list_nr += list[i] * p;
            p = p * 10;
        }
        rez = list_nr / num;
        String div = String.valueOf(rez);
        int len = div.length();
        int[] aux = new int[len];
        for (int i = 0; i < div.length(); i++)
            aux[i] = div.charAt(i) - '0';
        return aux;
    }
}

class Aufgabe_4
{
    static int billigste_tast(int[] list)
    {
        int min = list[0];
        for (int i = 0; i < list.length; i++)
        {
            if (list[i] < min)
                min = list[i];
        }
        return min;
    }
    static int teuerste_Gegenstand(int[] list1,int[] list2)
    {
        int max=list1[0];
        for(int i=0;i<list1.length;i++)
        {
            if(list1[i]>max)
                max=list1[i];
        }
        for(int j=0;j<list2.length;j++)
        {
            if(list2[j]>max)
                max=list2[j];
        }
        return max;
    }
    static int teuerste_USB(int[] list, int budget)
    {
        int max=0;
        for(int i=0;i<list.length;i++)
        {
            if(list[i]>max && list[i]<=budget)
                max=list[i];
        }
        return max;
    }
    static int max_Geldbetrag(int[] list1, int[] list2, int budget)
    {
        int max_sum=0;
        for(int i=0;i<list1.length;i++)
        {
            for(int j=0;j<list2.length;j++)
            {
                if((list1[i]+list2[j])<=budget && (list1[i]+list2[j])>max_sum)
                {
                    max_sum=list1[i]+list2[j];
                }
            }
        }
        if(max_sum!=0)
        {
            return max_sum;
        }else return -1;
    }
}
